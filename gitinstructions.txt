Git common instructions

ls
	列举此目录下的所有可见文件
ls -ah
	列举当前目录下的所有文件，包括隐藏文件
cd
	进入某某文件夹，在cd后添加文件夹路径，例如 cd d:/   进入D盘
mkdir
	创建某某文件夹，在mkdir后添加新建的文件夹名字，例如 mkdir new    新建一个名为new的文件夹
pwd
	用来显示当前所在的文件夹，在window下，仓库所在路径不要包含中文
cat
	cat后加文件名，可以显示在仓库里的那个文件包含的内容，例如 cat new.txt
rm
	rm 后加文件名，可以删除文件管理器中没用的文件
	
	
git init
	把这个当前目录（你进入的目录为选中目录）变成Git可以管理的仓库
git add
	把新放入的文件，或者更改过的文件添加到仓库，git add 后加文件名（包括后缀）
git commit
	提交到仓库，这个命令的全部是git commit -m "XXX" 其中的XXX是本次提交的说明，最好加上这里面的内容，方便以后找回原先的版本。唔，里面最好不要加中文，不然提交不了
git status
	查看当前仓库是否有未提交的修改
git diff
	查看当前修改，需要在文件未添加提交前才有效。
git diff HEAD -- 文件名
	可以查看工作区与版本库最新版本的区别
git log
	查看版本历史记录，里面包含了版本号，可以用来回溯
git reset
	回溯其他版本，git reset --hard 后加版本号（可以只使用前面7位）
git reset --hard HEAD^
	回溯上一个版本，一个^代表上个版本，^^代表上上个版本，版本太多，可使用HEAD~100，代表回溯前100个版本
git reflog
	显示所有的记录，用于已经返回旧版本，但又想再回到新版本

git checkout -- file
	可以丢弃工作区的修改（即工作区改变，但未add到暂缓区，可把工作区的内容变得和当前版本库内一样）。也可用于文件管理器中删除错误，需要从版本库内恢复文件
git reset HEAD file
	把暂缓区的修改回退到工作区，即取消add进暂缓区的修改
git rm
	用于在版本库内删除一个文件。